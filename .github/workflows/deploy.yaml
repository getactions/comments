name: 'Deploy'
on:
  push:
    branches: ['main']
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env.local
        run: |
          cat <<EOF > .env.local
          NEXT_PUBLIC_GISCUS_APP_HOST=${{ secrets.BASE_URL }}
          NEXT_PUBLIC_REVALIDATE_FIRST_PAGE=true
          NEXT_PUBLIC_DEMO_REPO=getactions/comments
          NEXT_PUBLIC_DEMO_REPO_ID=${{ secrets.REPO_ID }}
          NEXT_PUBLIC_DEMO_CATEGORY_ID=${{ secrets.CATEGORY_ID }}
          EOF

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --frozen-lockfile --production=false

      - name: Build
        run: yarn run build

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Build image and push to registry
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Deploy to Coolify
        run: |
          curl --fail-with-body --request GET '${{ secrets.COOLIFY_WEBHOOK }}' --header 'Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}'
